version: 2
jobs:
  build:
    environment:
      TERM: 'dumb'
      ANDROID_HOME: '/home/circleci/android-sdk'
      ANDROID_NDK_REPOSITORY: "/home/circleci/android-ndk"
    docker:
      - image: passy/android-circleci-litho:v27-2
    resource_class: large
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Set up keys
          command: "[ -n \"$KEY\" ] && openssl aes-256-cbc -d -in scripts/setup-keys.enc -k $KEY >> gradle.properties || true"
      - run:
          name: Unset key
          command: "export KEY=\"<unset>\""
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "gradle.properties" }}
      - run:
          name: Set up Buck
          command: echo "export PATH=$HOME/buck/bin:$PATH" >> $BASH_ENV
      - run:
          name: Gradle Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Buck Dependencies
          command: $HOME/buck/bin/buck fetch //...
      - save_cache:
          paths:
            - ~/.gradle
            - ~/buck
            - ~/android-sdk
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "gradle.properties" }}
      - run:
          name: Run Tests
          command: |
            export PATH="$HOME/buck/bin:$PATH"
            echo "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap" >> .buckjavaargs.local
            buck build sample --num-threads=4
            buck build sample-barebones --num-threads=4
            buck build sample-codelab --num-threads=4
            buck test litho-it/src/test/... --num-threads=4
            buck test litho-it-powermock/src/test/... --num-threads=4
            ./gradlew test
            ./gradlew :sample-kotlin:assembleDebug
      - run:
          name: Publish Snapshot
          command: scripts/circle-ci-publish-snapshot.sh
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
