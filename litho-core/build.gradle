/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.facebook.kotlin.compilerplugins.dataclassgenerate'

project.group = GROUP
version = VERSION_NAME

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
    }

    buildTypes {
        def internalBuildField = 'IS_INTERNAL_BUILD'
        def useIncrementalMountHelper = 'USE_INCREMENTAL_MOUNT_HELPER'

        debug {
            buildConfigField 'boolean', internalBuildField, 'true'
            buildConfigField 'boolean', useIncrementalMountHelper, 'true'
        }

        release {
            buildConfigField 'boolean', internalBuildField, 'false'
            buildConfigField 'boolean', useIncrementalMountHelper, 'true'
        }
    }
    namespace 'com.facebook.litho'
    lint {
        abortOnError false
    }

    // TODO(#62): Re-enable abort on error.
}

dependencies {
    // Project dependencies
    api project(':litho-annotations')
    api project(':litho-perf-logger')
    api project(':litho-flexlayout')
    api project(':litho-rendercore')
    api project(':litho-rendercore-incremental-mount')
    api project(':litho-rendercore-primitives')
    api project(':litho-rendercore-transitions')
    api project(':litho-rendercore-visibility')

    // Annotations
    compileOnly deps.jsr305
    // Infer annotations is partially class-retained and need to be part
    // of the POM.
    implementation deps.inferAnnotations

    compileOnly deps.proguardAnnotations

    // Android Support Library
    compileOnly deps.supportAnnotations
    implementation deps.supportFragment
    implementation deps.supportCollection
    implementation deps.supportCore
    implementation deps.supportCustomView
    implementation deps.supportViewPager
    implementation deps.supportDynamicAnimations
    implementation deps.lifecycle

    // First-party dependencies
    if (project.isRelease()) {
        api deps.yoga
    } else {
        api project(':yogajni')
    }

    testImplementation deps.assertjCore
    testImplementation deps.junit
    testImplementation deps.robolectric
    testImplementation deps.mockitokotlin
    testImplementation deps.robolectric
    testImplementation deps.supportRecyclerView
    testImplementation deps.supportTestJunit
    testImplementation project(':litho-rendercore-testing')
    testImplementation project(':litho-testing')
    testImplementation project(':litho-widget-kotlin')
}

apply plugin: "com.vanniktech.maven.publish"
