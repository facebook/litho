# Copyright (c) Facebook, Inc. and its affiliates.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


name: Publish on release commits

# This workflow detects commits with the message "Release version X.Y.Z" and tags them as releases.
# After the release is tagged it runs tests in parallel before publishing and uploading it.
# When the upload is complete a script checks whether the artifacts are available.
#
# If the workflow fails any commit with the same version message
# will retag and trigger the workflow again.

on:
  push:
    branches:
      - master

jobs:
  push-tags-job:
    name: Push tags if new release
    runs-on: ubuntu-latest
    outputs:
      is-new-release: ${{ steps.push_tag.outcome == 'success' }}
    steps:
    - uses: actions/checkout@v2
    - name: Extract version info
      id: version_info
      run: echo ::set-output name=VERSION_INFO::`git log --format=%B -n 1 . | egrep '^[rR]elease version' | egrep -o '([[:digit:]]+\.){2}[[:digit:]]+' | xargs -0 printf v%s`
    - name: Set Git tag
      id: push_tag
      if: ${{ steps.version_info.outputs.VERSION_INFO != 'v' }}
      uses: weareyipyip/walking-tag-action@v2
      with:
        tag-name: ${{ steps.version_info.outputs.VERSION_INFO }}
        tag-message: ""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  new-release:
    name: Skip all if not a new release
    needs: [push-tags-job]
    if: ${{ needs.push-tags-job.outputs.is-new-release == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Check step
      run: echo "Starting a new release"
  test-job:
    name: Run all tests
    needs: [new-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch buck
      run: |
        wget https://jitpack.io/com/github/facebook/buck/master/buck-master.pex && \
        chmod +x buck-master.pex && \
        mv buck-master.pex buck && \
        ls -l buck
    # - uses: nick-invision/retry@v1
    #   with:
    #     timeout_minutes: 30
    #     max_attempts: 3
    #     command: BUCK_PATH=`realpath buck` ./gradlew test --stacktrace
  sample-java-job:
    name: Assemble sample app
    needs: [new-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch buck
      run: |
        wget https://jitpack.io/com/github/facebook/buck/master/buck-master.pex && \
        chmod +x buck-master.pex && \
        mv buck-master.pex buck && \
        ls -l buck
    - name: Assemble sample app
      run: BUCK_PATH=`realpath buck` ./gradlew :sample:assembleRelease --stacktrace
  sample-kotlin-job:
    name: Assemble kotlin app
    needs: [new-release]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fetch buck
      run: |
        wget https://jitpack.io/com/github/facebook/buck/master/buck-master.pex && \
        chmod +x buck-master.pex && \
        mv buck-master.pex buck && \
        ls -l buck
    - name: Assemble kotlin sample
      run: BUCK_PATH=`realpath buck` ./gradlew :sample-kotlin:assembleRelease --stacktrace
  publish-job:
    name: Maven Publish
    runs-on: ubuntu-latest
    needs: [test-job, sample-java-job, sample-kotlin-job]
    steps:
    - uses: actions/checkout@v2
    - name: Fetch buck
      run: |
        wget https://jitpack.io/com/github/facebook/buck/master/buck-master.pex && \
        chmod +x buck-master.pex && \
        mv buck-master.pex buck && \
        ls -l buck
    - name: Publish to maven
      env:
        BINTRAY_USERNAME: ${{ secrets.BINTRAY_USERNAME }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
      run: |
        BUCK_PATH=`realpath buck` ./gradlew bintrayUpload -PbintrayUsername=$BINTRAY_USERNAME -PbintrayApiKey=$BINTRAY_API_KEY --stacktrace
  validate-job:
    name: Validate uploads
    runs-on: ubuntu-latest
    needs: [publish-job]
    steps:
    - uses: actions/checkout@v2
    - name: Get tag info
      id: tag_info
      run: echo ::set-output name=TAG_INFO::`git describe --tags | cut -d v -f2`
    - name: Run validation script
      env:
        TAG: ${{ steps.tag_info.outputs.TAG_INFO }}
      run: |
        scripts/verify-bintray-upload.hs $TAG
