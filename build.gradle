/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${GRADLE_BINTRAY_PLUGIN_VERSION}"
        classpath "com.github.dcendents:android-maven-gradle-plugin:${ANDROID_MAVEN_GRADLE_PLUGIN_VERSION}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${GRADLE_VERSIONS_PLUGIN_VERSION}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${KOTLIN_VERSION}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'com.github.ben-manes.versions'

subprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    afterEvaluate {
        tasks.withType(com.android.build.gradle.tasks.factory.AndroidUnitTest) {
            it.dependsOn copyYogaLibs
            systemProperty 'java.library.path', "${rootDir}/build/jniLibs"
            environment 'LD_LIBRARY_PATH', "${rootDir}/build/jniLibs"
            environment 'DYLD_LIBRARY_PATH', "${rootDir}/build/jniLibs"
        }
    }
}

ext {
    minSdkVersion = 15
    targetSdkVersion = 28
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'
    sourceCompatibilityVersion = JavaVersion.VERSION_1_7
    targetCompatibilityVersion = JavaVersion.VERSION_1_7
}

ext.forceReleaseBuild = project.hasProperty('forceReleaseBuild')
ext.isRelease = { forceReleaseBuild ||
        ['uploadArchives', 'bintrayUpload'].any { gradle.startParameter.taskNames.contains(it) } }
ext.isSnapshot = { VERSION_NAME.endsWith('-SNAPSHOT') }

ext.deps = [
        // Android support
        supportAnnotations : 'androidx.annotation:annotation:1.0.0',
        supportAppCompat   : 'androidx.appcompat:appcompat:1.0.0',
        supportCore        : 'androidx.core:core:1.0.0',
        supportCustomView  : 'androidx.customview:customview:1.0.0',
        supportRecyclerView: 'androidx.recyclerview:recyclerview:1.0.0',
        supportEspresso    : 'androidx.test.espresso:espresso-core:3.1.1',
        supportEspressoIntents : 'androidx.test.espresso:espresso-intents:3.1.1',
        supportTestRunner  : 'androidx.test:runner:1.1.1',
        supportTestRules   : 'androidx.test:rules:1.1.1',
        supportMultidex    : 'androidx.multidex:multidex:2.0.0',
        supportViewPager   : 'androidx.viewpager:viewpager:1.0.0',
        // Arch
        archLifecycle      : 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01',
        // First-party
        fresco             : 'com.facebook.fresco:fresco:1.13.0',
        soloader           : 'com.facebook.soloader:soloader:0.8.2',
        textlayoutbuilder  : 'com.facebook.fbui.textlayoutbuilder:textlayoutbuilder:1.5.0',
        screenshot         : 'com.facebook.testing.screenshot:core:0.5.0',
        flipper            : 'com.facebook.flipper:flipper:0.30.2',
        flipperLithoPlugin : 'com.facebook.flipper:flipper-litho-plugin:0.30.2',
        // Annotations
        jsr305             : 'com.google.code.findbugs:jsr305:3.0.1',
        inferAnnotations   : 'com.facebook.infer.annotation:infer-annotation:0.17.0',
        // Debugging and testing
        guava              : 'com.google.guava:guava:20.0',
        robolectric        : 'org.robolectric:robolectric:3.0',
        junit              : 'junit:junit:4.12',
        hamcrestLibrary    : 'org.hamcrest:hamcrest-library:1.3',
        powermockMockito   : 'org.powermock:powermock-api-mockito:1.5.6',
        powermockJunit     : 'org.powermock:powermock-module-junit4-rule:1.5.6',
        powermockXstream   : 'org.powermock:powermock-classloading-xstream:1.5.6',
        mockitoCore        : 'org.mockito:mockito-core:1.9.5',
        assertjCore        : 'org.assertj:assertj-core:2.9.0',
        compileTesting     : 'com.google.testing.compile:compile-testing:0.14',
        // Proguard annotations (published through Yoga)
        proguardAnnotations: 'com.facebook.yoga:proguard-annotations:1.14.1',
        // Processor
        javapoet           : 'com.squareup:javapoet:1.9.0',
        // Misc
        khronos            : 'org.khronos:opengl-api:gl1.1-android-2.1_r1',
        // Kotlin
        kotlinStandardLib  : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${KOTLIN_VERSION}"
]

// For releases, we want to depend on a stable version of Yoga.
ext.deps.yoga =
    isSnapshot()
        ? 'com.facebook.yoga:yoga:1.16.0' // can be a '-SNAPSHOT' release
        : 'com.facebook.yoga:yoga:1.16.0'

// This should hopefully only serve as a temporary measure until
// we have a proper Gradle setup for Yoga and JNI.
task copyYogaLibs(type: Copy, dependsOn: ':yoga:buckBuild') {
    from 'buck-out/gen/lib/yogajni/jni#default,shared/'
    include '*.so'
    include '*.dylib'
    include '*.dll'
    into "$buildDir/jniLibs"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
