/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        javaCompileOptions {
            annotationProcessorOptions {
                // We transitively depend on auto-value which we don't want to
                // use as annotation processor at this time, so we can safely
                // disable this warning.
                includeCompileClasspath false
            }
        }
    }

    buildTypes {
        def internalBuildField = 'IS_INTERNAL_BUILD'

        debug {
            buildConfigField 'boolean', internalBuildField, 'true'
        }

        release {
            buildConfigField 'boolean', internalBuildField, 'false'
        }
    }

    // TODO(#62): Re-enable abort on error.
    lintOptions {
        abortOnError false
    }
}

dependencies {
    api project(':litho-rendercore')

    // Annotations
    compileOnly deps.jsr305
    implementation deps.inferAnnotations

    compileOnly deps.proguardAnnotations

    // Android Support Library
    compileOnly deps.supportAnnotations
    implementation deps.supportCore

    // Testing deps
    implementation deps.junit
    implementation deps.jsr305
    implementation deps.assertjCore
    implementation deps.guava
    implementation(deps.robolectric) {
        exclude group: "com.google.guava", module: "guava"
    }
}

apply from: rootProject.file('gradle/release.gradle')

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}
artifacts.add('archives', sourcesJar)
