"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9858],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>m,MDXProvider:()=>d,mdx:()=>y,useMDXComponents:()=>l,withMDXComponents:()=>s});var o=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=o.createContext({}),s=function(e){return function(t){var n=l(t.components);return o.createElement(e,a({},t,{components:n}))}},l=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(m.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=l(n),d=r,u=s["".concat(i,".").concat(d)]||s[d]||f[d]||a;return n?o.createElement(u,c(c({ref:t},m),{},{components:n})):o.createElement(u,c({ref:t},m))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var m=2;m<a;m++)i[m]=n[m];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},62329:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>f,frontMatter:()=>c,metadata:()=>m,toc:()=>l});var o=n(58168),r=n(98587),a=(n(96540),n(15680)),i=["components"],c={id:"componenttree",title:"ComponentTree"},p=void 0,m={unversionedId:"mainconcepts/coordinate-state-actions/componenttree",id:"mainconcepts/coordinate-state-actions/componenttree",title:"ComponentTree",description:"In the Using Components guide, we saw how you can create a root component and pass it to a LithoView, which will take care of creating a ComponentTree with the given root. ComponentTree manages your component's lifecycle in a thread-safe way. You can create and make calls to it from any thread.",source:"@site/../docs/mainconcepts/coordinate-state-actions/componenttree.md",sourceDirName:"mainconcepts/coordinate-state-actions",slug:"/mainconcepts/coordinate-state-actions/componenttree",permalink:"/docs/mainconcepts/coordinate-state-actions/componenttree",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mainconcepts/coordinate-state-actions/componenttree.md",tags:[],version:"current",frontMatter:{id:"componenttree",title:"ComponentTree"}},s={},l=[],d={toc:l},u="wrapper";function f(e){var t=e.components,n=(0,r.A)(e,i);return(0,a.mdx)(u,(0,o.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"In the ",(0,a.mdx)("a",{parentName:"p",href:"/docs/using-components"},"Using Components")," guide, we saw how you can create a root component and pass it to a ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoView"),", which will take care of creating a ",(0,a.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/ComponentTree.html"},(0,a.mdx)("inlineCode",{parentName:"a"},"ComponentTree"))," with the given root. ",(0,a.mdx)("inlineCode",{parentName:"p"},"ComponentTree")," manages your component's lifecycle in a thread-safe way. You can create and make calls to it from any thread."),(0,a.mdx)("p",null,"You shouldn't typically need to do this, as you usually provide a component to your LithoView instead as shown in ",(0,a.mdx)("a",{parentName:"p",href:"/docs/using-components"},"Using Components"),". However, there are situations where you might want to create and manage your own ",(0,a.mdx)("inlineCode",{parentName:"p"},"ComponentTree"),"."),(0,a.mdx)("p",null,"In order to create a ",(0,a.mdx)("inlineCode",{parentName:"p"},"ComponentTree"),", you pass it a component root and attach it to a ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoView"),". The ",(0,a.mdx)("inlineCode",{parentName:"p"},"ComponentTree"),"'s ",(0,a.mdx)("inlineCode",{parentName:"p"},"create()")," method returns a ",(0,a.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/ComponentTree.Builder.html"},"Builder")," which exposes configuration methods for the ",(0,a.mdx)("inlineCode",{parentName:"p"},"ComponentTree"),"."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},'@Override\npublic void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    final LithoView lithoView = new LithoView(this);\n    final ComponentContext c = new ComponentContext(this);\n\n    final Component text = Text.create(c)\n        .text("Hello World")\n        .textSizeDip(50)\n        .build();\n    final ComponentTree componentTree = ComponentTree.create(c, text).build();\n\n    lithoView.setComponentTree(componentTree);\n    setContentView(lithoView);\n}\n')))}f.isMDXComponent=!0}}]);