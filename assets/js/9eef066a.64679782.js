"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5897],{15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>c,MDXProvider:()=>d,mdx:()=>h,useMDXComponents:()=>l,withMDXComponents:()=>s});var i=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},r.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=i.createContext({}),s=function(e){return function(n){var t=l(n.components);return i.createElement(e,r({},n,{components:t}))}},l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},d=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},u="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=l(t),d=o,u=s["".concat(a,".").concat(d)]||s[d]||v[d]||r;return t?i.createElement(u,m(m({ref:n},c),{},{components:t})):i.createElement(u,m({ref:n},c))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=f;var m={};for(var p in n)hasOwnProperty.call(n,p)&&(m[p]=n[p]);m.originalType=e,m[u]="string"==typeof e?e:o,a[1]=m;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},19632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>p,default:()=>v,frontMatter:()=>m,metadata:()=>c,toc:()=>l});var i=t(58168),o=t(98587),r=(t(96540),t(15680)),a=["components"],m={id:"primitive-component",title:"Creating a Primitive Component"},p=void 0,c={unversionedId:"mainconcepts/primitivecomponents/primitive-component",id:"mainconcepts/primitivecomponents/primitive-component",title:"Creating a Primitive Component",description:"Primitive Components can be used to render views or drawables on the screen.",source:"@site/../docs/mainconcepts/primitivecomponents/primitive-component.mdx",sourceDirName:"mainconcepts/primitivecomponents",slug:"/mainconcepts/primitivecomponents/primitive-component",permalink:"/docs/mainconcepts/primitivecomponents/primitive-component",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mainconcepts/primitivecomponents/primitive-component.mdx",tags:[],version:"current",frontMatter:{id:"primitive-component",title:"Creating a Primitive Component"},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/mainconcepts/primitivecomponents/overview"},next:{title:"Lifecycle of a Primitive Component",permalink:"/docs/mainconcepts/primitivecomponents/primitive"}},s={},l=[{value:"Comparison with KComponents",id:"comparison-with-kcomponents",level:2},{value:"Creating a Primitive Component",id:"creating-a-primitive-component",level:2}],d={toc:l},u="wrapper";function v(e){var n=e.components,t=(0,o.A)(e,a);return(0,r.mdx)(u,(0,i.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Primitive Components can be used to render views or drawables on the screen."),(0,r.mdx)("h2",{id:"comparison-with-kcomponents"},"Comparison with KComponents"),(0,r.mdx)("p",null,"There are several similarities between Primitive Components and ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/components-basics"},"KComponents"),":"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"They both consist of a render function that can use the component's ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/props"},"props")," and ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/hooks-intro"},"hooks"),"."),(0,r.mdx)("li",{parentName:"ul"},"As with KComponents, Primitive Components are subject to ",(0,r.mdx)("a",{parentName:"li",href:"/docs/mainconcepts/components-basics/#rules-for-components"},"rules")," for their use."),(0,r.mdx)("li",{parentName:"ul"},"Just like KComponents, Primitive Components can be configured using common props and state.")),(0,r.mdx)("h2",{id:"creating-a-primitive-component"},"Creating a Primitive Component"),(0,r.mdx)("p",null,"The following example shows a Primitive Component that creates an ",(0,r.mdx)("inlineCode",{parentName:"p"},"ImageView")," to be rendered on the screen."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/kotlin/primitives/SimpleImageViewPrimitiveComponent.kt start=start_image_primitive_component_example end=end_image_primitive_component_example",file:"sample/src/main/java/com/facebook/samples/litho/kotlin/primitives/SimpleImageViewPrimitiveComponent.kt",start:"start_image_primitive_component_example",end:"end_image_primitive_component_example"},"class SimpleImageViewPrimitiveComponent(private val style: Style? = null) : PrimitiveComponent() {\n\n  override fun PrimitiveComponentScope.render(): LithoPrimitive {\n    return LithoPrimitive(primitive = SimpleImageViewPrimitive, style = style)\n  }\n}\n\ninternal val PrimitiveComponentScope.SimpleImageViewPrimitive\n  get() =\n      Primitive(\n          layoutBehavior = ImageLayoutBehavior,\n          mountBehavior =\n              MountBehavior(ViewAllocator { context -> ImageView(context) }) {\n                bind(R.drawable.ic_launcher) { imageView ->\n                  imageView.setImageDrawable(drawableRes(R.drawable.ic_launcher))\n                  onUnbind { imageView.setImageResource(0) }\n                }\n              })\n")),(0,r.mdx)("admonition",{type:"note"},(0,r.mdx)("p",{parentName:"admonition"},"The above example explicitly creates a ",(0,r.mdx)("inlineCode",{parentName:"p"},"Primitive")," object. But for convenience, you can also pass ",(0,r.mdx)("inlineCode",{parentName:"p"},"layoutBehavior")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"mountBehavior")," directly to ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoPrimitive"),".")),(0,r.mdx)("p",null,"A Primitive represents a reusable unit responsible for hosting the logic to create, measure, and bind the content that the Primitive Component will render. For more information, see the ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/primitivecomponents/primitive"},"Lifecycle of a Primitive Component")," page."),(0,r.mdx)("p",null,"As can be seen from the above example, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," function returns a ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoPrimitive")," that contains:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"Primitive")," object that describes a primitive to be rendered"),(0,r.mdx)("li",{parentName:"ul"},"A ",(0,r.mdx)("inlineCode",{parentName:"li"},"style")," object that is applied to the primitive component.")),(0,r.mdx)("admonition",{type:"note"},(0,r.mdx)("p",{parentName:"admonition"},"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"render()")," method can be invoked from multiple threads. You should ",(0,r.mdx)("strong",{parentName:"p"},"not")," assume it can only be called from the main thread. The implementation of render should not cause side-effects; essentially, it acts like a pure function.")))}v.isMDXComponent=!0}}]);