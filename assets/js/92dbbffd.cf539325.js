"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4150],{15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>s,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>d,withMDXComponents:()=>p});var r=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(){return i=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},i.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){return function(n){var t=d(n.components);return r.createElement(e,i({},n,{components:t}))}},d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,u=p["".concat(a,".").concat(m)]||p[m]||g[m]||i;return t?r.createElement(u,l(l({ref:n},s),{},{components:t})):r.createElement(u,l({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=y;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},41242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=t(58168),o=t(98587),i=(t(96540),t(15680)),a=["components"],l={id:"coding-style",title:"Coding Style"},c=void 0,s={unversionedId:"codegen/coding-style",id:"codegen/coding-style",title:"Coding Style",description:"This page contains Best Practice guidelines for styling code.",source:"@site/../docs/codegen/coding-style.md",sourceDirName:"codegen",slug:"/codegen/coding-style",permalink:"/docs/codegen/coding-style",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/codegen/coding-style.md",tags:[],version:"current",frontMatter:{id:"coding-style",title:"Coding Style"},sidebar:"mainSidebar",previous:{title:"Triggering Events with Handles",permalink:"/docs/codegen/trigger-events"},next:{title:"Introduction and Setup",permalink:"/docs/kotlin/kotlin-intro"}},p={},d=[{value:"Guidelines",id:"guidelines",level:2}],m={toc:d},u="wrapper";function g(e){var n=e.components,t=(0,o.A)(e,a);return(0,i.mdx)(u,(0,r.A)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("p",null,"This page contains Best Practice guidelines for styling code."),(0,i.mdx)("h2",{id:"guidelines"},"Guidelines"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Components"),":",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"Name specs consistently with ",(0,i.mdx)("em",{parentName:"li"},"NAMEComponentSpec")," to generate a component called ",(0,i.mdx)("em",{parentName:"li"},"NAMEComponent"),"."),(0,i.mdx)("li",{parentName:"ul"},"The ",(0,i.mdx)("em",{parentName:"li"},"ComponentContext")," argument should be simply called ",(0,i.mdx)("inlineCode",{parentName:"li"},"c")," to make the layout code less verbose and more readable."))),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Resource Types")," - where appropriate, use resource types, such as ",(0,i.mdx)("inlineCode",{parentName:"li"},"ResType.STRING"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"ResType.COLOR"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"ResType.DIMEN_SIZE"),", to make it easier to set prop values from Android resources."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Props"),":",(0,i.mdx)("ul",{parentName:"li"},(0,i.mdx)("li",{parentName:"ul"},"Declare all required props first then the optional ones (",(0,i.mdx)("inlineCode",{parentName:"li"},"optional = true"),")."),(0,i.mdx)("li",{parentName:"ul"},"Declare common props (props defined for all Components on ",(0,i.mdx)("inlineCode",{parentName:"li"},"Component.Builder"),") after the component's own props."))),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Enums")," - use static imports on all layout Enums (such as ",(0,i.mdx)("inlineCode",{parentName:"li"},"YogaEdge"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"YogaAlign"),", ",(0,i.mdx)("inlineCode",{parentName:"li"},"YogaJustify"),") to reduce layout code and make it more readable."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Conditionals")," - use inline conditionals on optional children to keep the layout construction code fluent if possible."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Child Container")," - if constructing a child container, add the container in the following line. This gives the code a layout like construction."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Lifecycle methods")," - such as ",(0,i.mdx)("inlineCode",{parentName:"li"},"@OnCreateLayout"),", should be static and package-private.")),(0,i.mdx)("p",null,"The following snippet is an example of an application of the Litho Best Practice coding style:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-java"},"@LayoutSpec\nclass MyComponentSpec {\n\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop(resType = STRING) String title,\n      @Prop(optional = true) Drawable image) {\n\n  return Row.create(c)\n      .alignItems(CENTER)\n      .paddingRes(R.dimen.some_dimen)\n      .child(\n          Image.create(c)\n              .drawable(image)\n              .width(40)\n              .height(40)\n              .marginRes(RIGHT, R.dimen.my_margin))\n      .child(TextUtils.isEmpty(title) ? null :\n          Text.create(c)\n              .text(title)\n              .textColorAttr(R.attr.textColorTertiary)\n              .marginDip(5)\n              .flexGrow(1f))\n      .build();\n  }\n}\n")))}g.isMDXComponent=!0}}]);