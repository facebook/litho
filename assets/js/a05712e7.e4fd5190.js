"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3457],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>i,MDXProvider:()=>m,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>c});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){return function(t){var n=u(t.components);return r.createElement(e,a({},t,{components:n}))}},u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,d=c["".concat(p,".").concat(m)]||c[m]||y[m]||a;return n?r.createElement(d,s(s({ref:t},i),{},{components:n})):r.createElement(d,s({ref:t},i))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,p[1]=s;for(var i=2;i<a;i++)p[i]=n[i];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},80080:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>y,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(58168),o=n(98587),a=(n(96540),n(15680)),p=["components"],s={id:"styles",title:"Styles"},l=void 0,i={unversionedId:"styles",id:"styles",title:"Styles",description:"Components can have their props come from regular Android style resources in a similar way to an Android View's AttributeSet constructor. It enables developers to define static prop values or prop defaults directly from style resources.",source:"@site/../docs/styles.md",sourceDirName:".",slug:"/styles",permalink:"/docs/styles",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/styles.md",tags:[],version:"current",frontMatter:{id:"styles",title:"Styles"}},c={},u=[],m={toc:u},d="wrapper";function y(e){var t=e.components,n=(0,o.A)(e,p);return(0,a.mdx)(d,(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"Components can have their props come from regular Android style resources in a similar way to an Android View's AttributeSet constructor. It enables developers to define static prop values or prop defaults directly from style resources."),(0,a.mdx)("p",null,"Style support can be implemented using the ",(0,a.mdx)("inlineCode",{parentName:"p"},"@OnLoadStyle")," method in your component spec. The first argument is a ComponentContext which you can use to retrieve a TypedArray with the style resource values. The rest of the arguments should be Outputs matching the name and type of the props to which you want to set values."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"@LayoutSpec\nclass MyComponentSpec {\n\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop String prop1,\n      @Prop int prop2) {\n\n    return ...;\n  }\n}\n")),(0,a.mdx)("p",null,"For example, in order to implement style support for the two props of the MyComponentSpec above, you'd first define the styleable attributes as usual:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n\n  <attr name="prop1" format="string" />\n  <attr name="prop2" format="integer" />\n\n  <declare-styleable name="MyComponent">\n    <attr name="prop1" />\n    <attr name="prop2" />\n  </declare-styleable>\n\n</resources>\n')),(0,a.mdx)("p",null,"Then you can collect the values of these attributes in your ",(0,a.mdx)("inlineCode",{parentName:"p"},"@OnLoadStyle")," method as follows:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"@OnLoadStyle\nvoid onLoadStyle(\n    ComponentContext c,\n    Output<String> prop1,\n    Output<Integer> prop2) {\n\n  final DataBoundTypedArray a =\n      c.obtainDataBoundAttributes(R.styleable.Text, 0);\n\n  for (int i = 0, size = a.getIndexCount(); i < size; i++) {\n    final int attr = a.getIndex(i);\n\n    if (attr == R.styleable.MyComponent_prop1) {\n      prop1.set(a.getString(attr));\n    } else if (attr == R.styleable.MyComponent_prop2) {\n      prop2.set(a.getInteger(attr));\n    }\n  }\n\n  a.recycle();\n}\n")),(0,a.mdx)("p",null,"With this, you'll be able to define ",(0,a.mdx)("inlineCode",{parentName:"p"},"prop1")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"prop2")," in a style:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n    <style name="SomeStyle">\n        <item name="prop1">@string/some_string</item>\n    </style>\n</resources>\n')),(0,a.mdx)("p",null,"And use it in ",(0,a.mdx)("inlineCode",{parentName:"p"},"MyComponent"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"MyComponent.create(c, 0, R.style.SomeStyle)\n    .prop2(10)\n    .build();\n")),(0,a.mdx)("p",null,"In which case, ",(0,a.mdx)("inlineCode",{parentName:"p"},"prop1")," would get the value from the ",(0,a.mdx)("inlineCode",{parentName:"p"},"@string/some_string")," resource."))}y.isMDXComponent=!0}}]);