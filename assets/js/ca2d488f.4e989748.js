"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4119,5575,7956,813,3194,5099,7480,337,2718,4623],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>c,MDXProvider:()=>u,mdx:()=>y,useMDXComponents:()=>m,withMDXComponents:()=>p});var o=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){return function(t){var n=m(t.components);return o.createElement(e,a({},t,{components:n}))}},m=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(n),u=r,d=p["".concat(s,".").concat(u)]||p[u]||h[u]||a;return n?o.createElement(d,i(i({ref:t},c),{},{components:n})):o.createElement(d,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var o=n(96540),r=n(20053);const a={tabItem:"tabItem_Ymn6"};function s(e){var t=e.children,n=e.hidden,s=e.className;return o.createElement("div",{role:"tabpanel",className:(0,r.default)(a.tabItem,s),hidden:n},t)}},11470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>C});var o=n(58168),r=n(96540),a=n(20053),s=n(23104),i=n(56347),l=n(57485),c=n(31682),p=n(89466);function m(e){return function(e){var t,n;return null!=(t=null==(n=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function u(e){var t=e.values,n=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:m(n);return function(e){var t=(0,c.X)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId,a=(0,i.W6)(),s=function(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=o?o:null}({queryString:n,groupId:o});return[(0,l.aZ)(s),(0,r.useCallback)((function(e){if(s){var t=new URLSearchParams(a.location.search);t.set(s,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[s,a])]}function f(e){var t,n,o,a,s=e.defaultValue,i=e.queryString,l=void 0!==i&&i,c=e.groupId,m=u(e),f=(0,r.useState)((function(){return function(e){var t,n=e.defaultValue,o=e.tabValues;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:o}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+o.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var r=null!=(t=o.find((function(e){return e.default})))?t:o[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:m})})),y=f[0],g=f[1],v=h({queryString:l,groupId:c}),b=v[0],x=v[1],C=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),n=(0,p.Dv)(t),o=n[0],a=n[1],[o,(0,r.useCallback)((function(e){t&&a.set(e)}),[t,a])]),w=C[0],k=C[1],N=function(){var e=null!=b?b:w;return d({value:e,tabValues:m})?e:null}();return(0,r.useLayoutEffect)((function(){N&&g(N)}),[N]),{selectedValue:y,selectValue:(0,r.useCallback)((function(e){if(!d({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),x(e),k(e)}),[x,k,m]),tabValues:m}}var y=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){var t=e.className,n=e.block,i=e.selectedValue,l=e.selectValue,c=e.tabValues,p=[],m=(0,s.a_)().blockElementScrollPositionUntilNextRender,u=function(e){var t=e.currentTarget,n=p.indexOf(t),o=c[n].value;o!==i&&(m(t),l(o))},d=function(e){var t,n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":var o,r=p.indexOf(e.currentTarget)+1;n=null!=(o=p[r])?o:p[0];break;case"ArrowLeft":var a,s=p.indexOf(e.currentTarget)-1;n=null!=(a=p[s])?a:p[p.length-1]}null==(t=n)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.default)("tabs",{"tabs--block":n},t)},c.map((function(e){var t=e.value,n=e.label,s=e.attributes;return r.createElement("li",(0,o.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:function(e){return p.push(e)},onKeyDown:d,onClick:u},s,{className:(0,a.default)("tabs__item",g.tabItem,null==s?void 0:s.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function b(e){var t=e.lazy,n=e.children,o=e.selectedValue,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var s=a.find((function(e){return e.props.value===o}));return s?(0,r.cloneElement)(s,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==o})})))}function x(e){var t=f(e);return r.createElement("div",{className:(0,a.default)("tabs-container",g.tabList)},r.createElement(v,(0,o.A)({},e,t)),r.createElement(b,(0,o.A)({},e,t)))}function C(e){var t=(0,y.default)();return r.createElement(x,(0,o.A)({key:String(t)},e))}},74646:(e,t,n)=>{n.d(t,{A:()=>d});var o=n(58168),r=n(96540),a=n(68382),s=n(45603),i=n(76062),l="0.50.2",c="0.51.0-SNAPSHOT",p="0.10.5",m="0.142.0",u=n(6342);const d=function(e){var t=e.language,n=e.code.replace(/{{site.lithoVersion}}/g,l).replace(/{{site.soloaderVersion}}/g,p).replace(/{{site.lithoSnapshotVersion}}/g,c).replace(/{{site.flipperVersion}}/g,m).trim(),d=(0,u.p)().isDarkTheme?i.A:s.A;return r.createElement(a.Ay,(0,o.A)({},a.Gs,{code:n,language:t,theme:d}),(function(e){var t=e.className,n=e.style,o=e.tokens,a=e.getLineProps,s=e.getTokenProps;return r.createElement("pre",{className:t,style:n},o.map((function(e,t){return r.createElement("div",a({line:e,key:t}),e.map((function(e,t){return r.createElement("span",s({token:e,key:t}))})))})))}))}},33148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var o=n(58168),r=n(98587),a=(n(96540),n(15680)),s=(n(11470),n(19365),n(74646),["components"]),i={id:"testing-assertions",title:"Assertions"},l=void 0,c={unversionedId:"kotlin/testing-assertions",id:"kotlin/testing-assertions",title:"Assertions",description:"It's possible to use AssertJ-style APIs to assert what gets rendered by a Component or LithoView. All of the Component and LithoView assertions are exposed in LithoAssertions.assertThat() methods.",source:"@site/../docs/kotlin/testing-assertions.mdx",sourceDirName:"kotlin",slug:"/kotlin/testing-assertions",permalink:"/docs/kotlin/testing-assertions",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/kotlin/testing-assertions.mdx",tags:[],version:"current",frontMatter:{id:"testing-assertions",title:"Assertions"},sidebar:"mainSidebar",previous:{title:"Getting Started",permalink:"/docs/kotlin/testing-getting-started"},next:{title:"Interactions",permalink:"/docs/kotlin/testing-actions"}},p={},m=[{value:"Assertions against the component hierarchy",id:"assertions-against-the-component-hierarchy",level:2},{value:"Use Case: how to assert my component directly renders a certain component",id:"use-case-how-to-assert-my-component-directly-renders-a-certain-component",level:3},{value:"Use Case: how to assert my component renders a certain component somewhere in its children",id:"use-case-how-to-assert-my-component-renders-a-certain-component-somewhere-in-its-children",level:3},{value:"Props checking",id:"props-checking",level:3},{value:"Assertions against the view hierarchy",id:"assertions-against-the-view-hierarchy",level:2},{value:"Some popular assertions",id:"some-popular-assertions",level:3}],u={toc:m},d="wrapper";function h(e){var t=e.components,n=(0,r.A)(e,s);return(0,a.mdx)(d,(0,o.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"It's possible to use ",(0,a.mdx)("inlineCode",{parentName:"p"},"AssertJ-style")," APIs to assert what gets rendered by a ",(0,a.mdx)("inlineCode",{parentName:"p"},"Component")," or ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoView"),". All of the ",(0,a.mdx)("inlineCode",{parentName:"p"},"Component")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoView")," assertions are exposed in ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoAssertions.assertThat()")," methods."),(0,a.mdx)("p",null,"If you need to get a handle of a component that is inside the ComponentTree of the one you rendered using ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoTestRule"),", you can use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"findComponent()")," method."),(0,a.mdx)("admonition",{type:"note"},(0,a.mdx)("p",{parentName:"admonition"},"All of the following examples use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"TestComponent")," that has one direct child, ",(0,a.mdx)("inlineCode",{parentName:"p"},"InnerComponent"),", and one non-direct child, ",(0,a.mdx)("inlineCode",{parentName:"p"},"Text"),".")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=test_component_start end=test_component_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"test_component_start",end:"test_component_end"},'  class TestComponent() : KComponent() {\n    override fun ComponentScope.render(): Component {\n      return InnerComponent()\n    }\n  }\n}\n\nclass InnerComponent(\n    @get:VisibleForTesting val style: Style = Style.height(100.dp).width(100.dp),\n    @get:VisibleForTesting val value: String = "some_value"\n) : KComponent() {\n  override fun ComponentScope.render(): Component {\n    return Row(style = style) { child(Text(text = value)) }\n  }\n}\n')),(0,a.mdx)("h2",{id:"assertions-against-the-component-hierarchy"},"Assertions against the component hierarchy"),(0,a.mdx)("p",null,"For component hierarchy assertions, there two main use-cases:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"How to assert a component directly renders a certain component."),(0,a.mdx)("li",{parentName:"ul"},"How to assert a component renders a certain component somewhere in its children.")),(0,a.mdx)("p",null,"These use cases are detailed in the following sub-sections."),(0,a.mdx)("h3",{id:"use-case-how-to-assert-my-component-directly-renders-a-certain-component"},"Use Case: how to assert my component directly renders a certain component"),(0,a.mdx)("p",null,"If you want to find out only the ",(0,a.mdx)("strong",{parentName:"p"},"direct")," children, which for the ",(0,a.mdx)("inlineCode",{parentName:"p"},"TestComponent")," is ",(0,a.mdx)("inlineCode",{parentName:"p"},"InnerComponent"),", you can use ",(0,a.mdx)("inlineCode",{parentName:"p"},"findDirectComponent(Class<out Component?>)"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=find_direct_component_start end=find_direct_component_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"find_direct_component_start",end:"find_direct_component_end"},"val testLithoView = mLithoTestRule.render { TestComponent() }\nval innerComponent = testLithoView.findDirectComponent(InnerComponent::class)\nassertThat(innerComponent).isNotNull()\n")),(0,a.mdx)("h3",{id:"use-case-how-to-assert-my-component-renders-a-certain-component-somewhere-in-its-children"},"Use Case: how to assert my component renders a certain component somewhere in its children"),(0,a.mdx)("p",null,"If you want to find a component that is not a direct child of your component (or if the hierarchy level is not important in your test), you can use ",(0,a.mdx)("inlineCode",{parentName:"p"},"findComponent(Class<out Component?>)"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=find_non_direct_component_start end=find_non_direct_component_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"find_non_direct_component_start",end:"find_non_direct_component_end"},"val textComponent = testLithoView.findComponent(Text::class)\nassertThat(textComponent).isNotNull()\n")),(0,a.mdx)("p",null,"If you want to confirm that given component classes were rendered, but you don't need a component instance itself, you can use either of the following:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"LithoAssertions.assertThat(lithoViewRule.lithoView).containsComponent()")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"LithoAssertions.assertThat(lithoViewRule.lithoView).containsExactly()"))),(0,a.mdx)("p",null,"Both are used in the following snippet:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=contains_components_start end=contains_components_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"contains_components_start",end:"contains_components_end"},"val testLithoView = mLithoTestRule.render { TestComponent() }\nassertThat(testLithoView)\n    .containsExactly(2, InnerComponent::class)\n    .containsComponents(DeepComponent::class, InnerSecondComponent::class)\n")),(0,a.mdx)("p",null,"You can use ",(0,a.mdx)("inlineCode",{parentName:"p"},"containsComponent()")," ",(0,a.mdx)("inlineCode",{parentName:"p"},"hasExactly()")," providing different parameters such as 'the number of times the component class should be present in the component tree' or 'the varargs of all of the classes you would like to check'."),(0,a.mdx)("p",null,"In addition, you can check if the view doesn't contain a given class by using ",(0,a.mdx)("inlineCode",{parentName:"p"},"doesNotContainComponents()"),":"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"containsComponent(KClass<? extends Component>)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasExactly(int, KClass<? extends Component>)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"containsExactlyOne(KClass<? extends Component>)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"doesNotContainComponents(KClass<? extends Component>...)"))),(0,a.mdx)("h3",{id:"props-checking"},"Props checking"),(0,a.mdx)("p",null,"It's possible to check if your component requires Props, as shown in the following snippet:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=has_props_start end=has_props_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"has_props_start",end:"has_props_end"},'val testLithoView = mLithoTestRule.render { TestComponent() }\nassertThat(testLithoView).willRenderContent()\nval component = testLithoView.findComponent(InnerComponent::class)\n\nassertThat(component)\n    .hasProps(\n        InnerComponent::value to "some_value",\n        InnerComponent::style to Style.height(100.dp).width(100.dp))\n    .hasPropsMatching(InnerComponent::value to IsInstanceOf.instanceOf(String::class.java))\n')),(0,a.mdx)("h2",{id:"assertions-against-the-view-hierarchy"},"Assertions against the view hierarchy"),(0,a.mdx)("p",null,(0,a.mdx)("inlineCode",{parentName:"p"},"LithoTestRule.render(Component)")," returns a ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoView"),", which can be used for assertions that can be found in the ",(0,a.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/testing/assertj/LithoViewAssert.html"},"LithoViewAssert")," class."),(0,a.mdx)("p",null,"With this assertion, you can, for example, check if a given text or drawable is visible or if the view contains a given test key, as shown in the following snippet:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt start=lithoview_assertion_start end=lithoview_assertion_end",file:"litho-it/src/test/com/facebook/litho/examples/LithoTestRuleExampleTest.kt",start:"lithoview_assertion_start",end:"lithoview_assertion_end"},'val testLithoView = mLithoTestRule.render { TestComponent() }\nassertThat(testLithoView).hasVisibleText("some_value")\n/** can use all of the assertions from: [LithoViewAssert] class */\n')),(0,a.mdx)("h3",{id:"some-popular-assertions"},"Some popular assertions"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasContentDescription(String)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasVisibleDrawable(@DrawableRes int)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasVisibleDrawable(Drawable)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"doesNotHaveVisibleDrawable(@DrawableRes int)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"doesNotHaveVisibleDrawable(Drawable)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasVisibleText(String)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasVisibleText(@StringRes int)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"doesNotHaveVisibleText(@StringRes int)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasVisibleTextMatching(String)")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"hasMeasuredHeightOf(int)"))),(0,a.mdx)("admonition",{type:"note"},(0,a.mdx)("p",{parentName:"admonition"},(0,a.mdx)("em",{parentName:"p"},"Row")," and ",(0,a.mdx)("em",{parentName:"p"},"Column")," are not ",(0,a.mdx)("inlineCode",{parentName:"p"},"KComponents"),", they are just made to look like it.\n",(0,a.mdx)("inlineCode",{parentName:"p"},"Assertions")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"hasProps")," won't work on them.")))}h.isMDXComponent=!0},68382:(e,t,n)=>{n.d(t,{Ay:()=>h,Gs:()=>s});var o=n(61258);const r={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var a=n(96540),s={Prism:o.A,theme:r};function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},l.apply(this,arguments)}var c=/\r\n|\r|\n/,p=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},m=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)};function u(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===t.indexOf(o)&&(n[o]=e[o]);return n}var d=function(e){function t(){for(var t=this,n=[],o=arguments.length;o--;)n[o]=arguments[o];e.apply(this,n),i(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?function(e,t){var n=e.plain,o=Object.create(null),r=e.styles.reduce((function(e,n){var o=n.languages,r=n.style;return o&&!o.includes(t)||n.types.forEach((function(t){var n=l({},e[t],r);e[t]=n})),e}),o);return r.root=n,r.plain=l({},n,{backgroundColor:null}),r}(e.theme,e.language):void 0;return t.themeDict=n})),i(this,"getLineProps",(function(e){var n=e.key,o=e.className,r=e.style,a=l({},u(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),s=t.getThemeDict(t.props);return void 0!==s&&(a.style=s.plain),void 0!==r&&(a.style=void 0!==a.style?l({},a.style,r):r),void 0!==n&&(a.key=n),o&&(a.className+=" "+o),a})),i(this,"getStyleForToken",(function(e){var n=e.types,o=e.empty,r=n.length,a=t.getThemeDict(t.props);if(void 0!==a){if(1===r&&"plain"===n[0])return o?{display:"inline-block"}:void 0;if(1===r&&!o)return a[n[0]];var s=o?{display:"inline-block"}:{},i=n.map((function(e){return a[e]}));return Object.assign.apply(Object,[s].concat(i))}})),i(this,"getTokenProps",(function(e){var n=e.key,o=e.className,r=e.style,a=e.token,s=l({},u(e,["key","className","style","token"]),{className:"token "+a.types.join(" "),children:a.content,style:t.getStyleForToken(a),key:void 0});return void 0!==r&&(s.style=void 0!==s.style?l({},s.style,r):r),void 0!==n&&(s.key=n),o&&(s.className+=" "+o),s})),i(this,"tokenize",(function(e,t,n,o){var r={code:t,grammar:n,language:o,tokens:[]};e.hooks.run("before-tokenize",r);var a=r.tokens=e.tokenize(r.code,r.grammar,r.language);return e.hooks.run("after-tokenize",r),a}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,o=e.code,r=e.children,a=this.getThemeDict(this.props),s=t.languages[n];return r({tokens:function(e){for(var t=[[]],n=[e],o=[0],r=[e.length],a=0,s=0,i=[],l=[i];s>-1;){for(;(a=o[s]++)<r[s];){var u=void 0,d=t[s],h=n[s][a];if("string"==typeof h?(d=s>0?d:["plain"],u=h):(d=m(d,h.type),h.alias&&(d=m(d,h.alias)),u=h.content),"string"==typeof u){var f=u.split(c),y=f.length;i.push({types:d,content:f[0]});for(var g=1;g<y;g++)p(i),l.push(i=[]),i.push({types:d,content:f[g]})}else s++,t.push(d),n.push(u),o.push(0),r.push(u.length)}s--,t.pop(),n.pop(),o.pop(),r.pop()}return p(i),l}(void 0!==s?this.tokenize(t,o,s,n):[o]),className:"prism-code language-"+n,style:void 0!==a?a.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(a.Component);const h=d},76062:(e,t,n)=>{n.d(t,{A:()=>o});const o={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},45603:(e,t,n)=>{n.d(t,{A:()=>o});const o={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);