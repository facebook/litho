"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5785],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>u,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>d,withMDXComponents:()=>c});var a=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),c=function(e){return function(t){var n=d(t.components);return a.createElement(e,r({},t,{components:n}))}},d=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,p=c["".concat(i,".").concat(m)]||c[m]||h[m]||r;return n?a.createElement(p,s(s({ref:t},u),{},{components:n})):a.createElement(p,s({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=y;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(96540),o=n(20053);const r={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,o.default)(r.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var a=n(58168),o=n(96540),r=n(20053),i=n(23104),s=n(56347),l=n(57485),u=n(31682),c=n(89466);function d(e){return function(e){var t,n;return null!=(t=null==(n=o.Children.map(e,(function(e){if(!e||(0,o.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,n=e.children;return(0,o.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,u.X)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId,r=(0,s.W6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,a=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:n,groupId:a});return[(0,l.aZ)(i),(0,o.useCallback)((function(e){if(i){var t=new URLSearchParams(r.location.search);t.set(i,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[i,r])]}function y(e){var t,n,a,r,i=e.defaultValue,s=e.queryString,l=void 0!==s&&s,u=e.groupId,d=m(e),y=(0,o.useState)((function(){return function(e){var t,n=e.defaultValue,a=e.tabValues;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var o=null!=(t=a.find((function(e){return e.default})))?t:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:i,tabValues:d})})),f=y[0],b=y[1],g=h({queryString:l,groupId:u}),v=g[0],k=g[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,c.Dv)(t),a=n[0],r=n[1],[a,(0,o.useCallback)((function(e){t&&r.set(e)}),[t,r])]),x=w[0],T=w[1],I=function(){var e=null!=v?v:x;return p({value:e,tabValues:d})?e:null}();return(0,o.useLayoutEffect)((function(){I&&b(I)}),[I]),{selectedValue:f,selectValue:(0,o.useCallback)((function(e){if(!p({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);b(e),k(e),T(e)}),[k,T,d]),tabValues:d}}var f=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){var t=e.className,n=e.block,s=e.selectedValue,l=e.selectValue,u=e.tabValues,c=[],d=(0,i.a_)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==s&&(d(t),l(a))},p=function(e){var t,n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var a,o=c.indexOf(e.currentTarget)+1;n=null!=(a=c[o])?a:c[0];break;case"ArrowLeft":var r,i=c.indexOf(e.currentTarget)-1;n=null!=(r=c[i])?r:c[c.length-1]}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,i=e.attributes;return o.createElement("li",(0,a.A)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:function(e){return c.push(e)},onKeyDown:p,onClick:m},i,{className:(0,r.default)("tabs__item",b.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=n?n:t)})))}function v(e){var t=e.lazy,n=e.children,a=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=r.find((function(e){return e.props.value===a}));return i?(0,o.cloneElement)(i,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a})})))}function k(e){var t=y(e);return o.createElement("div",{className:(0,r.default)("tabs-container",b.tabList)},o.createElement(g,(0,a.A)({},e,t)),o.createElement(v,(0,a.A)({},e,t)))}function w(e){var t=(0,f.default)();return o.createElement(k,(0,a.A)({key:String(t)},e))}},5755:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>u,metadata:()=>d,toc:()=>p});var a=n(58168),o=n(98587),r=(n(96540),n(15680)),i=n(11470),s=n(19365),l=["components"],u={id:"keys-and-identity",title:"Keys and Component Identity",description:"Explains how Component identity works in Litho using keys and why manual keys are sometimes necessary."},c=void 0,d={unversionedId:"mainconcepts/coordinate-state-actions/keys-and-identity",id:"mainconcepts/coordinate-state-actions/keys-and-identity",title:"Keys and Component Identity",description:"Explains how Component identity works in Litho using keys and why manual keys are sometimes necessary.",source:"@site/../docs/mainconcepts/coordinate-state-actions/keys-and-identity.md",sourceDirName:"mainconcepts/coordinate-state-actions",slug:"/mainconcepts/coordinate-state-actions/keys-and-identity",permalink:"/docs/mainconcepts/coordinate-state-actions/keys-and-identity",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/mainconcepts/coordinate-state-actions/keys-and-identity.md",tags:[],version:"current",frontMatter:{id:"keys-and-identity",title:"Keys and Component Identity",description:"Explains how Component identity works in Litho using keys and why manual keys are sometimes necessary."},sidebar:"mainSidebar",previous:{title:"Flexbox Troubleshooting",permalink:"/docs/mainconcepts/troubleshooting"},next:{title:"Introduction",permalink:"/docs/kotlin/lazycollections/"}},m={},p=[{value:"Automatically assigned keys",id:"automatically-assigned-keys",level:2},{value:"Assigning manual keys",id:"assigning-manual-keys",level:2}],h={toc:p},y="wrapper";function f(e){var t=e.components,u=(0,o.A)(e,l);return(0,r.mdx)(y,(0,a.A)({},h,u,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"Keys help Litho to set a unique identity on a component that represents a node in the component tree. Litho uses keys to keep track of component identity between layout changes and correctly identify a component as the target of a state update."),(0,r.mdx)("p",null,"Based on its type and the key of its parent, Litho automatically sets a key on each component.\nHowever, there are situations when there may be a need to add, remove or rearrange components in the UI, or conditionally add certain components."),(0,r.mdx)("p",null,"This page explains how keys are autogenerated by Litho and why sometimes it's necessary to provide manual keys when they can't be autogenerated."),(0,r.mdx)("p",null,"As long as a component is rendered in the same node in the component tree (see the images, below), it will be assigned the same key. If that node changes position (for example, it's moved to a different parent or it changes position because other sibling nodes are removed or inserted), its key is not guaranteed to be same between UI updates."),(0,r.mdx)("admonition",{type:"note"},(0,r.mdx)("p",{parentName:"admonition"},"This is an important consideration because Litho uses the key to determine which component to update when calling a state update and to correctly identify this component when traversing the tree and setting the new state value.")),(0,r.mdx)("h2",{id:"automatically-assigned-keys"},"Automatically assigned keys"),(0,r.mdx)("p",null,"Litho generates component keys based on their type and position relative to the parent, as shown in the folowing Component Tree."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Tree example",src:n(61524).A,width:"1582",height:"524"})),(0,r.mdx)("p",null,"The key of a component is a concatenation of the following:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Parent's key")," - when the component is a child."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Component's key")," - determined by its type."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("strong",{parentName:"li"},"Deduplication ID")," - the position of this component between the other sibling components of the same type.")),(0,r.mdx)("p",null,"To reduce the chance of accidental key collision, there are other separators that are included in the key calculation but, for simplification, they are not included in this example."),(0,r.mdx)("p",null,"The following diagram shows the same Component Tree with added keys."),(0,r.mdx)("p",null,(0,r.mdx)("img",{alt:"Tree example",src:n(40118).A,width:"1583",height:"524"})),(0,r.mdx)("p",null,"Whenever a key collision is detected in a ComponentTree, which can happen when a parent component created multiple children components of the same type, Litho assigns a unique key to those siblings depending on their order. This means that the keys that are autogenerated are not stable if a component moves its position."),(0,r.mdx)("p",null,"The following diagram shows the Component Tree with the first Row Component removed.\n",(0,r.mdx)("img",{alt:"Tree example",src:n(91534).A,width:"1583",height:"524"})),(0,r.mdx)("p",null,"After the update, the second Row component in the initial tree is now the first child of type Row, so its key will change!"),(0,r.mdx)("p",null,"Litho was mapping this Row's state to its initial key, so all its state values will be reset after the update. Of greater consequence is that the state for that key will be associated with the next Row component, which is being assigned that key!\nYou can imagine how this can lead to undesirable UI bugs."),(0,r.mdx)("p",null,"Litho key autogeneration is best-effort, but cannot be fully determinist with a runtime implementation."),(0,r.mdx)("h2",{id:"assigning-manual-keys"},"Assigning manual keys"),(0,r.mdx)("p",null,"For dynamic UI hierarchies where components can change position, manual keys that are stable between UI updates must be assigned to components. The manual key will always take precedence over the autogenerated one."),(0,r.mdx)(i.default,{groupId:"keys-and-identity",defaultValue:"kotlin",values:[{label:"Kotlin API",value:"kotlin"},{label:"Spec API",value:"java"}],mdxType:"Tabs"},(0,r.mdx)(s.default,{value:"kotlin",mdxType:"TabItem"},"In the Kotlin API, a manual key can be set via the built-in global `key()` method:",(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/kotlin/state/IdentityRootComponent.kt start=start_manual_key end=end_manual_key",file:"sample/src/main/java/com/facebook/samples/litho/kotlin/state/IdentityRootComponent.kt",start:"start_manual_key",end:"end_manual_key"},'return Column(\n    style =\n        Style.onVisible {\n          if (!logOnce.value) {\n            // do some logging\n            logOnce.value = true\n          }\n        }) { // end_use_ref\n      if (isFirstCounterEnabled.value) {\n        child(\n            key("first_row") {\n              Row {\n                child(CounterComponent())\n                child(\n                    Text(\n                        text = "X",\n                        textSize = 30.dp,\n                        style =\n                            Style.margin(all = 30.dp).onClick {\n                              isFirstCounterEnabled.update(false)\n                            }))\n              }\n            })\n      }\n'))),(0,r.mdx)(s.default,{value:"java",mdxType:"TabItem"},"In the Spec API, the common `key` component prop can be used to manually set a key when a component is created:",(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-java",metastring:"file=sample/src/main/java/com/facebook/samples/litho/java/identity/IdentityRootComponentSpec.java start=start_manual_key end=end_manual_key",file:"sample/src/main/java/com/facebook/samples/litho/java/identity/IdentityRootComponentSpec.java",start:"start_manual_key",end:"end_manual_key"},'Row.create(c)\n    .key("first_row")\n    .child(CounterComponent.create(c))\n    .child(\n        Text.create(c)\n            .text("X")\n            .paddingPx(YogaEdge.START, 16)\n            .clickHandler(IdentityRootComponent.onClickRemoveFirstChild(c)))\n')))),(0,r.mdx)("admonition",{type:"tip"},(0,r.mdx)("p",{parentName:"admonition"},"Setting manual keys is also a nifty way to force a component's state value to be initialised again based on the value of certain props for example, if the manual key is a function of those props.")))}f.isMDXComponent=!0},91534:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/key-tree-remove-child-67e678c6b452ad8294fe5b6dfe06d29f.png"},40118:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/key-tree-with-keys-119162131f591e1d4466c5281abbae65.png"},61524:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/key-tree-51b1340799869efc5ad80723f77692c0.png"}}]);