"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1159,5575,7956,813,3194,5099,7480,337,2718,4623],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>u,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>c,withMDXComponents:()=>p});var o=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=o.createContext({}),p=function(e){return function(t){var n=c(t.components);return o.createElement(e,r({},t,{components:n}))}},c=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return o.createElement(u.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,d=p["".concat(i,".").concat(m)]||p[m]||h[m]||r;return n?o.createElement(d,l(l({ref:t},u),{},{components:n})):o.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var o=n(96540),a=n(20053);const r={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return o.createElement("div",{role:"tabpanel",className:(0,a.default)(r.tabItem,i),hidden:n},t)}},11470:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var o=n(58168),a=n(96540),r=n(20053),i=n(23104),l=n(56347),s=n(57485),u=n(31682),p=n(89466);function c(e){return function(e){var t,n;return null!=(t=null==(n=a.Children.map(e,(function(e){if(!e||(0,a.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function m(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:c(n);return function(e){var t=(0,u.X)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function h(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId,r=(0,l.W6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,o=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=o?o:null}({queryString:n,groupId:o});return[(0,s.aZ)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(r.location.search);t.set(i,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}}),[i,r])]}function y(e){var t,n,o,r,i=e.defaultValue,l=e.queryString,s=void 0!==l&&l,u=e.groupId,c=m(e),y=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,o=e.tabValues;if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:o}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+o.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=o.find((function(e){return e.default})))?t:o[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:c})})),f=y[0],g=y[1],v=h({queryString:s,groupId:u}),b=v[0],x=v[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:u}.groupId),n=(0,p.Dv)(t),o=n[0],r=n[1],[o,(0,a.useCallback)((function(e){t&&r.set(e)}),[t,r])]),C=w[0],N=w[1],k=function(){var e=null!=b?b:C;return d({value:e,tabValues:c})?e:null}();return(0,a.useLayoutEffect)((function(){k&&g(k)}),[k]),{selectedValue:f,selectValue:(0,a.useCallback)((function(e){if(!d({value:e,tabValues:c}))throw new Error("Can't select invalid tab value="+e);g(e),x(e),N(e)}),[x,N,c]),tabValues:c}}var f=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){var t=e.className,n=e.block,l=e.selectedValue,s=e.selectValue,u=e.tabValues,p=[],c=(0,i.a_)().blockElementScrollPositionUntilNextRender,m=function(e){var t=e.currentTarget,n=p.indexOf(t),o=u[n].value;o!==l&&(c(t),s(o))},d=function(e){var t,n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":var o,a=p.indexOf(e.currentTarget)+1;n=null!=(o=p[a])?o:p[0];break;case"ArrowLeft":var r,i=p.indexOf(e.currentTarget)-1;n=null!=(r=p[i])?r:p[p.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.default)("tabs",{"tabs--block":n},t)},u.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,o.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return p.push(e)},onKeyDown:d,onClick:m},i,{className:(0,r.default)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function b(e){var t=e.lazy,n=e.children,o=e.selectedValue,r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=r.find((function(e){return e.props.value===o}));return i?(0,a.cloneElement)(i,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})})))}function x(e){var t=y(e);return a.createElement("div",{className:(0,r.default)("tabs-container",g.tabList)},a.createElement(v,(0,o.A)({},e,t)),a.createElement(b,(0,o.A)({},e,t)))}function w(e){var t=(0,f.default)();return a.createElement(x,(0,o.A)({key:String(t)},e))}},74646:(e,t,n)=>{n.d(t,{A:()=>d});var o=n(58168),a=n(96540),r=n(68382),i=n(45603),l=n(76062),s="0.50.2",u="0.51.0-SNAPSHOT",p="0.10.5",c="0.142.0",m=n(6342);const d=function(e){var t=e.language,n=e.code.replace(/{{site.lithoVersion}}/g,s).replace(/{{site.soloaderVersion}}/g,p).replace(/{{site.lithoSnapshotVersion}}/g,u).replace(/{{site.flipperVersion}}/g,c).trim(),d=(0,m.p)().isDarkTheme?l.A:i.A;return a.createElement(r.Ay,(0,o.A)({},r.Gs,{code:n,language:t,theme:d}),(function(e){var t=e.className,n=e.style,o=e.tokens,r=e.getLineProps,i=e.getTokenProps;return a.createElement("pre",{className:t,style:n},o.map((function(e,t){return a.createElement("div",r({line:e,key:t}),e.map((function(e,t){return a.createElement("span",i({token:e,key:t}))})))})))}))}},25148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var o=n(58168),a=n(98587),r=(n(96540),n(15680)),i=(n(11470),n(19365),n(86025)),l=(n(74646),["components"]),s={id:"migration-strategies",title:"Migration Strategies"},u=void 0,p={unversionedId:"kotlin/migration-strategies",id:"kotlin/migration-strategies",title:"Migration Strategies",description:"Prerequisites",source:"@site/../docs/kotlin/migration-strategies.mdx",sourceDirName:"kotlin",slug:"/kotlin/migration-strategies",permalink:"/docs/kotlin/migration-strategies",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/kotlin/migration-strategies.mdx",tags:[],version:"current",frontMatter:{id:"migration-strategies",title:"Migration Strategies"},sidebar:"mainSidebar",previous:{title:"Canvas",permalink:"/docs/widgets/canvas"},next:{title:"Compatibility with Custom Views",permalink:"/docs/kotlin/custom-view-compat"}},c={},m=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Adopting Litho in your app",id:"adopting-litho-in-your-app",level:2},{value:"Bottom-up",id:"bottom-up",level:3},{value:"Top-down",id:"top-down",level:3},{value:"More complex example",id:"more-complex-example",level:3}],d={toc:m},h="wrapper";function y(e){var t=e.components,n=(0,a.A)(e,l);return(0,r.mdx)(h,(0,o.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.mdx)("p",null,"Before reading this page, you may find it helpful to review the following sections of the Tutorial:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/tutorial/project-setup"},"Setting up the Project")," - the required settings and dependencies to add Litho to your project."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/tutorial/first-components"},"Component and Props")," - learn the basic Litho building blocks and create a component that uses props."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("a",{parentName:"li",href:"/docs/tutorial/introducing-layout"},"Introducing Layout")," - become familiar with building layouts using Flexbox.")),(0,r.mdx)("h2",{id:"adopting-litho-in-your-app"},"Adopting Litho in your app"),(0,r.mdx)("p",null,"Using Litho in a new surface is fairly straightforward: you can put a ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView")," at the root of your new ",(0,r.mdx)("inlineCode",{parentName:"p"},"Fragment")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"Activity")," and start writing your components.\nHowever, adopting Litho within an existing surface needs to be done more incrementally and can require a bit more thought."),(0,r.mdx)("p",null,"Litho components can interoperate with ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"s in the same App or even on the same screen, so you can migrate ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"-based screen to Litho incrementally and maintain a hybrid Component-View UI."),(0,r.mdx)("p",null,"There are two common strategies for incrementally migrating to Litho: ",(0,r.mdx)("a",{parentName:"p",href:"#bottom-up"},"Bottom Up")," and ",(0,r.mdx)("a",{parentName:"p",href:"#top-down"},"Top-down"),", as detailed in the following sub-sections."),(0,r.mdx)("p",null,"Let's use the simple UI shown below as an example:"),(0,r.mdx)("img",{src:(0,i.default)("/images/litho-compound-component.png"),alt:"litho-compound-component"}),(0,r.mdx)("p",null,"This is how the XML/",(0,r.mdx)("inlineCode",{parentName:"p"},"View")," implementation of the above UI could look like:"),(0,r.mdx)("table",null,(0,r.mdx)("tr",null,(0,r.mdx)("th",null,"XML"),(0,r.mdx)("th",null,"View")),(0,r.mdx)("tr",null,(0,r.mdx)("td",null,(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- my_custom_layout.xml --\x3e\n<LinearLayout\n    android:orientation="horizontal"\n    android:layout_width="match_parent"\n    android:layout_height="wrap_content">\n  <ImageView\n      android:layout_width="100dp"\n      android:layout_height="100dp"\n      android:src="@drawable/ic_launcher"/>\n  <TextView\n      android:layout_width="wrap_content"\n      android:layout_height="wrap_content"\n      android:layout_gravity="center_vertical"\n      android:text="Hello there"/>\n</LinearLayout>\n'))),(0,r.mdx)("td",null,(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},'class MyCustomLayout @JvmOverloads constructor(\n    context: Context,\n    attrs: AttributeSet? = null\n) : LinearLayout(context, attrs) {\n  init {\n    orientation = HORIZONTAL\n    layoutParams = LayoutParams(\n        MATCH_PARENT,\n        WRAP_CONTENT\n    )\n\n    addView(\n        ImageView(context).apply {\n          layoutParams = LayoutParams(\n              100.dpToPx,\n              100.dpToPx)\n          setImageResource(R.drawable.ic_launcher)\n        }\n    )\n\n    addView(\n        TextView(context).apply {\n          layoutParams = LayoutParams(\n              WRAP_CONTENT,\n              WRAP_CONTENT).apply {\n            gravity = CENTER_VERTICAL\n          }\n          text = "Hello there"\n        }\n    )\n  }\n}\n'))))),(0,r.mdx)("h3",{id:"bottom-up"},"Bottom-up"),(0,r.mdx)("p",null,"With the bottom-up approach, you break down the UI into smaller pieces that can be converted incrementally. The ",(0,r.mdx)("inlineCode",{parentName:"p"},"View")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"ViewGroup")," in the original implementation is replaced by a ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView")," that you attach as child to the root ",(0,r.mdx)("inlineCode",{parentName:"p"},"ViewGroup")," of your UI."),(0,r.mdx)("p",null,"In the example component above, you can identify two UI blocks, which can be converted independently into two Litho components: Image and Text"),(0,r.mdx)("p",null,"Litho provides ",(0,r.mdx)("a",{parentName:"p",href:"/docs/widgets/builtin-widgets"},"a library of widget components"),", which you can immediately start using. If your app has a custom design system that implements custom views for primitives such as ",(0,r.mdx)("inlineCode",{parentName:"p"},"Button"),", ",(0,r.mdx)("inlineCode",{parentName:"p"},"Text")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"Image"),", you can start by creating ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/primitivecomponents/overview"},"Primitive Components)")," for them first; you can also reuse these components across the app to convert multiple screens to Litho."),(0,r.mdx)("p",null,"Once you've completed the conversion of the ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"s, you can coalesce all the individual Primitive Components into a single ",(0,r.mdx)("a",{parentName:"p",href:"/docs/kotlin/kotlin-api-basics"},"KComponent")," and use one ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView")," as the root of the UI."),(0,r.mdx)("p",null,"Here is an example showing how the example component could be implemented with a bottom-up:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},'class MyCustomComponent : KComponent() {\n  override fun ComponentScope.render(): Component {\n    return Row {\n      child(\n          Image(\n              drawable = drawableRes(R.drawable.ic_launcher),\n              style = Style.width(100.dp).height(100.dp))\n      )\n      child(\n          Text(\n              text = "Hello there",\n              style = Style.alignSelf(YogaAlign.CENTER))\n      )\n    }\n  }\n}\n')),(0,r.mdx)("p",null,"It's recommended to use the bottom-approach because this way you can use the full potential of Litho and its performance optimisations such as:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Incremental mount"),(0,r.mdx)("li",{parentName:"ul"},"View flattening"),(0,r.mdx)("li",{parentName:"ul"},"Moving work to background thread"),(0,r.mdx)("li",{parentName:"ul"},"View/Drawable pooling and preallocation"),(0,r.mdx)("li",{parentName:"ul"},"Granular UI updates")),(0,r.mdx)("h3",{id:"top-down"},"Top-down"),(0,r.mdx)("p",null,"With the top-down approach, you replace the root ",(0,r.mdx)("inlineCode",{parentName:"p"},"ViewGroup")," of your UI with a ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView")," and wrap the root ",(0,r.mdx)("inlineCode",{parentName:"p"},"View")," representing the UI into a ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/primitivecomponents/overview"},"Primitive Component()"),". As you convert smaller parts of the UI into Components, you extract them out of the Primitive Component and into individual ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView"),"s."),(0,r.mdx)("p",null,"Here is how the example component could be implemented with the top-down approach:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin"},"class MyCustomComponent : PrimitiveComponent() {\n  override fun PrimitiveComponentScope.render(): LithoPrimitive {\n    return LithoPrimitive(\n        layoutBehavior = MyCustomLayoutBehavior,\n        mountBehavior = MountBehavior(ALLOCATOR) {},\n        style = null)\n  }\n}\n\nprivate val ALLOCATOR: ViewAllocator<LinearLayout> =\n    ViewAllocator { context ->\n      // Either instantiate the View\n      MyCustomLayout(context) as LinearLayout\n      // or inflate the XML\n      LayoutInflater.from(context)\n          .inflate(\n              R.layout.my_custom_layout,\n              null\n          ) as LinearLayout\n    }\n\nprivate object MyCustomLayoutBehavior : LayoutBehavior {\n  override fun LayoutScope.layout(\n      sizeConstraints: SizeConstraints\n  ): PrimitiveLayoutResult {\n    val content = ALLOCATOR.createContent(androidContext)\n    content.measure(\n        sizeConstraints.toWidthSpec(),\n        sizeConstraints.toHeightSpec()\n    )\n\n    return PrimitiveLayoutResult(\n        width = max(sizeConstraints.minWidth, content.measuredWidth),\n        height = max(sizeConstraints.minHeight, content.measuredHeight))\n  }\n}\n")),(0,r.mdx)("p",null,"This may be a good starting point, and in many cases it will be faster to implement than the bottom-up approach, especially when wrapping complex ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"s containing lots of internal logic. However, components implemented with the top-down approach won't be as performant as the ones implemented with the bottom-up approach, because Litho won't be able to perform all of the available optimizations on components implemented with the top-down approach. For example:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Less work can be moved to background thread - when the logic to initialise the ",(0,r.mdx)("inlineCode",{parentName:"li"},"View")," is encapsulated inside the ",(0,r.mdx)("inlineCode",{parentName:"li"},"View"),", then it is necessary to do it on the main thread."),(0,r.mdx)("li",{parentName:"ul"},"Possible corretness issues - mixing composite ",(0,r.mdx)("inlineCode",{parentName:"li"},"View"),"s and component wrappers can be prone to accidental mutations of the internal ",(0,r.mdx)("inlineCode",{parentName:"li"},"View")," state, causing the component and ",(0,r.mdx)("inlineCode",{parentName:"li"},"View")," state to diverge.")),(0,r.mdx)("p",null,"Litho will still apply the following optimizations making the wrapped ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"s more performant compared to not using Litho at all:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Incremental Mount"),(0,r.mdx)("li",{parentName:"ul"},"Pooling and preallocation")),(0,r.mdx)("p",null,"Some scenarios when the top-down approach is suitable include:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Using Litho for the architecture of your surface and for writing new features, but existing ",(0,r.mdx)("inlineCode",{parentName:"li"},"View"),"s might not be immediately converted to Litho."),(0,r.mdx)("li",{parentName:"ul"},"Converting a list surface to ",(0,r.mdx)("a",{parentName:"li",href:"/docs/sections/start"},"Sections"),". The root of the surface is a ",(0,r.mdx)("inlineCode",{parentName:"li"},"LithoView")," rendering a ",(0,r.mdx)("inlineCode",{parentName:"li"},"RecyclerCollectionComponent"),", while the individual list items can be either ",(0,r.mdx)("inlineCode",{parentName:"li"},"Views")," or Litho Components. You can leverage the Litho Lists API for features such as asynchronous data diffing or granular ",(0,r.mdx)("inlineCode",{parentName:"li"},"RecyclerView.Adapter")," updates before converting the entire UI to Litho.")),(0,r.mdx)("h3",{id:"more-complex-example"},"More complex example"),(0,r.mdx)("p",null,"Consider the following UI as an example:"),(0,r.mdx)("img",{src:(0,i.default)("/images/post-breakdown.png"),alt:"post-breakdown"}),(0,r.mdx)("p",null,"You can identify three UI blocks, which can be converted independently into three Litho Components:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Header"),(0,r.mdx)("li",{parentName:"ul"},"Media"),(0,r.mdx)("li",{parentName:"ul"},"Footer")),(0,r.mdx)("p",null,"You'll have three ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView"),"s in your UI to render the components."),(0,r.mdx)("p",null,"These components will be composed of smaller widgets such as ",(0,r.mdx)("inlineCode",{parentName:"p"},"Text")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"Image"),", similar to how ",(0,r.mdx)("inlineCode",{parentName:"p"},"ViewGroup"),"s arrange smaller ",(0,r.mdx)("inlineCode",{parentName:"p"},"View"),"s."),(0,r.mdx)("p",null,"Just like in the simpler example above - when the incremental conversion is complete, the individual Primitive Components can be merged into a single ",(0,r.mdx)("a",{parentName:"p",href:"/docs/kotlin/kotlin-api-basics"},"KComponent"),"."),(0,r.mdx)("p",null,"With the top-down approach, you'd replace the root ",(0,r.mdx)("inlineCode",{parentName:"p"},"ViewGroup")," of your UI with a ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView")," and wrap the root ",(0,r.mdx)("inlineCode",{parentName:"p"},"View")," representing the UI into a ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/primitivecomponents/overview"},"Primitive Component()"),". As you convert smaller parts of the UI into Components, you extract them out of the Primitive Component and into individual ",(0,r.mdx)("inlineCode",{parentName:"p"},"LithoView"),"s."))}y.isMDXComponent=!0},68382:(e,t,n)=>{n.d(t,{Ay:()=>h,Gs:()=>i});var o=n(61258);const a={plain:{backgroundColor:"#2a2734",color:"#9a86fd"},styles:[{types:["comment","prolog","doctype","cdata","punctuation"],style:{color:"#6c6783"}},{types:["namespace"],style:{opacity:.7}},{types:["tag","operator","number"],style:{color:"#e09142"}},{types:["property","function"],style:{color:"#9a86fd"}},{types:["tag-id","selector","atrule-id"],style:{color:"#eeebff"}},{types:["attr-name"],style:{color:"#c4b9fe"}},{types:["boolean","string","entity","url","attr-value","keyword","control","directive","unit","statement","regex","atrule","placeholder","variable"],style:{color:"#ffcc99"}},{types:["deleted"],style:{textDecorationLine:"line-through"}},{types:["inserted"],style:{textDecorationLine:"underline"}},{types:["italic"],style:{fontStyle:"italic"}},{types:["important","bold"],style:{fontWeight:"bold"}},{types:["important"],style:{color:"#c4b9fe"}}]};var r=n(96540),i={Prism:o.A,theme:a};function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},s.apply(this,arguments)}var u=/\r\n|\r|\n/,p=function(e){0===e.length?e.push({types:["plain"],content:"\n",empty:!0}):1===e.length&&""===e[0].content&&(e[0].content="\n",e[0].empty=!0)},c=function(e,t){var n=e.length;return n>0&&e[n-1]===t?e:e.concat(t)};function m(e,t){var n={};for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&-1===t.indexOf(o)&&(n[o]=e[o]);return n}var d=function(e){function t(){for(var t=this,n=[],o=arguments.length;o--;)n[o]=arguments[o];e.apply(this,n),l(this,"getThemeDict",(function(e){if(void 0!==t.themeDict&&e.theme===t.prevTheme&&e.language===t.prevLanguage)return t.themeDict;t.prevTheme=e.theme,t.prevLanguage=e.language;var n=e.theme?function(e,t){var n=e.plain,o=Object.create(null),a=e.styles.reduce((function(e,n){var o=n.languages,a=n.style;return o&&!o.includes(t)||n.types.forEach((function(t){var n=s({},e[t],a);e[t]=n})),e}),o);return a.root=n,a.plain=s({},n,{backgroundColor:null}),a}(e.theme,e.language):void 0;return t.themeDict=n})),l(this,"getLineProps",(function(e){var n=e.key,o=e.className,a=e.style,r=s({},m(e,["key","className","style","line"]),{className:"token-line",style:void 0,key:void 0}),i=t.getThemeDict(t.props);return void 0!==i&&(r.style=i.plain),void 0!==a&&(r.style=void 0!==r.style?s({},r.style,a):a),void 0!==n&&(r.key=n),o&&(r.className+=" "+o),r})),l(this,"getStyleForToken",(function(e){var n=e.types,o=e.empty,a=n.length,r=t.getThemeDict(t.props);if(void 0!==r){if(1===a&&"plain"===n[0])return o?{display:"inline-block"}:void 0;if(1===a&&!o)return r[n[0]];var i=o?{display:"inline-block"}:{},l=n.map((function(e){return r[e]}));return Object.assign.apply(Object,[i].concat(l))}})),l(this,"getTokenProps",(function(e){var n=e.key,o=e.className,a=e.style,r=e.token,i=s({},m(e,["key","className","style","token"]),{className:"token "+r.types.join(" "),children:r.content,style:t.getStyleForToken(r),key:void 0});return void 0!==a&&(i.style=void 0!==i.style?s({},i.style,a):a),void 0!==n&&(i.key=n),o&&(i.className+=" "+o),i})),l(this,"tokenize",(function(e,t,n,o){var a={code:t,grammar:n,language:o,tokens:[]};e.hooks.run("before-tokenize",a);var r=a.tokens=e.tokenize(a.code,a.grammar,a.language);return e.hooks.run("after-tokenize",a),r}))}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.render=function(){var e=this.props,t=e.Prism,n=e.language,o=e.code,a=e.children,r=this.getThemeDict(this.props),i=t.languages[n];return a({tokens:function(e){for(var t=[[]],n=[e],o=[0],a=[e.length],r=0,i=0,l=[],s=[l];i>-1;){for(;(r=o[i]++)<a[i];){var m=void 0,d=t[i],h=n[i][r];if("string"==typeof h?(d=i>0?d:["plain"],m=h):(d=c(d,h.type),h.alias&&(d=c(d,h.alias)),m=h.content),"string"==typeof m){var y=m.split(u),f=y.length;l.push({types:d,content:y[0]});for(var g=1;g<f;g++)p(l),s.push(l=[]),l.push({types:d,content:y[g]})}else i++,t.push(d),n.push(m),o.push(0),a.push(m.length)}i--,t.pop(),n.pop(),o.pop(),a.pop()}return p(l),s}(void 0!==i?this.tokenize(t,o,i,n):[o]),className:"prism-code language-"+n,style:void 0!==r?r.root:{},getLineProps:this.getLineProps,getTokenProps:this.getTokenProps})},t}(r.Component);const h=d},76062:(e,t,n)=>{n.d(t,{A:()=>o});const o={plain:{color:"#F8F8F2",backgroundColor:"#282A36"},styles:[{types:["prolog","constant","builtin"],style:{color:"rgb(189, 147, 249)"}},{types:["inserted","function"],style:{color:"rgb(80, 250, 123)"}},{types:["deleted"],style:{color:"rgb(255, 85, 85)"}},{types:["changed"],style:{color:"rgb(255, 184, 108)"}},{types:["punctuation","symbol"],style:{color:"rgb(248, 248, 242)"}},{types:["string","char","tag","selector"],style:{color:"rgb(255, 121, 198)"}},{types:["keyword","variable"],style:{color:"rgb(189, 147, 249)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(98, 114, 164)"}},{types:["attr-name"],style:{color:"rgb(241, 250, 140)"}}]}},45603:(e,t,n)=>{n.d(t,{A:()=>o});const o={plain:{color:"#393A34",backgroundColor:"#f6f8fa"},styles:[{types:["comment","prolog","doctype","cdata"],style:{color:"#999988",fontStyle:"italic"}},{types:["namespace"],style:{opacity:.7}},{types:["string","attr-value"],style:{color:"#e3116c"}},{types:["punctuation","operator"],style:{color:"#393A34"}},{types:["entity","url","symbol","number","boolean","variable","constant","property","regex","inserted"],style:{color:"#36acaa"}},{types:["atrule","keyword","attr-name","selector"],style:{color:"#00a4db"}},{types:["function","deleted","tag"],style:{color:"#d73a49"}},{types:["function-variable"],style:{color:"#6f42c1"}},{types:["tag","selector","keyword"],style:{color:"#00009f"}}]}}}]);