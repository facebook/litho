/*
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            all {
                // Because of native libraries loading (Yoga), we can never reuse a class loader and
                // need to fork a new process per class.
                forkEvery = 1
                maxParallelForks = 2

                testLogging {
                    events 'skipped', 'failed', 'standardOut', 'standardError'
                    showCauses = true
                    showExceptions = true
                    showStackTraces = true
                    exceptionFormat = 'full'
                    stackTraceFilters = []
                }
            }
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

dependencies {
    api project(':litho-core')

    // Annotations
    compileOnly deps.jsr305
    compileOnly deps.inferAnnotations

    implementation deps.kotlinStandardLib

    // Android Support Library
    compileOnly deps.supportAnnotations

    testImplementation project(':litho-rendercore-testing')
    testImplementation project(':litho-testing')
    testImplementation project(':litho-widget-kotlin')
    testImplementation deps.assertjCore
    testImplementation deps.junit
    testImplementation deps.robolectric
    testImplementation deps.supportTestJunit
}

apply from: rootProject.file('gradle/release.gradle')

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}
artifacts.add('archives', sourcesJar)
